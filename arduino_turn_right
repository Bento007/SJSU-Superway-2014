int leftmotor = 11;     
int rightmotor = 10;

int aMUX = 8;
int bMUX = 9;

int lleftsensor = 5;    //  very left sensor
int middlesensor = 6;
int rrightsensor = 7;    //  very right sensor
int lleft=LOW;    // reading
int middle=LOW;
int rright=LOW;   // reading

int locationCounter = 0;
int counterLightWhite=3;
int counterLightPurple=2;
boolean turning=true;
int pwmgo = 255;
int pwmslow = 200;
int pwmstop = 0;
int black=HIGH;
int white=LOW;

void setup() {                
  pinMode(leftmotor, OUTPUT);  
  pinMode(rightmotor, OUTPUT);
  pinMode(aMUX, OUTPUT); 
  pinMode(bMUX, OUTPUT); 
  pinMode(counterLightWhite, OUTPUT); 
  pinMode(counterLightPurple, OUTPUT); 
  pinMode(locationCounter, INPUT); 
  pinMode(lleftsensor, INPUT);   
  pinMode(middlesensor, INPUT);   
  pinMode(rrightsensor, INPUT); 
  digitalWrite(counterLightWhite, LOW);
  digitalWrite(counterLightPurple, LOW);  
}

void loop() {    // all sensors are active low
  lleft = digitalRead(lleftsensor);   
  middle = digitalRead(middlesensor);
  rright = digitalRead(rrightsensor);   


  // LOW = white
  // HIGH = black
  if((lleft==HIGH)&&(middle==HIGH)&&(rright==LOW)){     
    digitalWrite(aMUX, LOW);      // select 0b10 = go straight
    digitalWrite(bMUX, HIGH);      
  }
  if((lleft==LOW)&&(middle==HIGH)&&(rright==HIGH)){   
    digitalWrite(aMUX, LOW);      // select 0b10 = go straight
    digitalWrite(bMUX, HIGH);     
  }
  if((lleft==HIGH)&&(middle==HIGH)&&(rright==HIGH)){   // this is a merge, call a function  
    goRight();
  }
  if((lleft==LOW)&&(middle==LOW)&&(rright==LOW)) {
    digitalWrite(counterLightWhite, HIGH);
    digitalWrite(aMUX, LOW);      // select 0b00 = RC controlled
    digitalWrite(bMUX, LOW);   
  }  
  if((lleft==LOW)&&(middle==LOW)&&(rright==HIGH)){
    digitalWrite(counterLightWhite, HIGH);  
    digitalWrite(aMUX, LOW);      // select 0b00 = RC controlled
    digitalWrite(bMUX, LOW);    
  }
  if((lleft==HIGH)&&(middle==LOW)&&(rright==LOW)) {    
    digitalWrite(counterLightWhite, HIGH);  
    digitalWrite(aMUX, LOW);      // select 0b00 = RC controlled
    digitalWrite(bMUX, LOW);  
  }  
  if((lleft==HIGH)&&(middle==LOW)&&(rright==HIGH)) {
    digitalWrite(counterLightWhite, LOW);  
    digitalWrite(aMUX, HIGH);      // select 0b11 = turn right
    digitalWrite(bMUX, HIGH);  
  }  
  if((lleft==LOW)&&(middle==HIGH)&&(rright==LOW)){     
    digitalWrite(counterLightWhite, HIGH);
    digitalWrite(aMUX, LOW);      // select 0b00 = RC controlled
    digitalWrite(bMUX, LOW);      // go straight
  }

}

void goRight(){
  boolean exit=true;
  digitalWrite(counterLightPurple, HIGH);
  while(exit){
    digitalWrite(aMUX, HIGH);      // select 0b11 = turn right
    digitalWrite(bMUX, HIGH);
    lleft = digitalRead(lleftsensor);
    if(lleft==LOW){
     exit=false;
     digitalWrite(counterLightPurple, LOW);
     return;
    }
  }
}
